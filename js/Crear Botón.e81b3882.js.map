{"version":3,"file":"js/Crear Botón.e81b3882.js","mappings":"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","sources":["webpack://iam-button-creator/./src/views/button-creation/Step.vue","webpack://iam-button-creator/./src/components/button-create/AddCredentialModal.vue","webpack://iam-button-creator/./src/components/button-create/AddCredentialModal.vue?b3d8","webpack://iam-button-creator/./src/components/button-create/OutputOption.vue","webpack://iam-button-creator/./src/views/button-creation/CreateButton.vue","webpack://iam-button-creator/./src/views/button-creation/CreateButton.vue?a419"],"sourcesContent":["import script from \"./Step.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Step.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <modal v-model=\"isVisibleModal\" class=\"w-full sm:w-5/6 md:w-4/5 max-h-full rounded-lg\" classWrapper=\"!max-h-full \">\n    <div class=\"bg-primary-50/50 p-6 max-h-full overflow-y-auto rounded-lg\" v-if=\"isVisibleModal\">\n      <div class=\"flex flex-col min-h-[65vh]\">\n        <div class=\"text-3xl text-primary-600 font-bold\">Agregar credencial</div>\n        <p>Selecciona primero la entidad dueña de la credencial y luego selecciona la credenciales (se pueden agregar más de una credencial a la vez)</p>\n        <div class=\"py-6 grow\">\n          <v-select\n            name=\"provider\"\n            label=\"Nombre de la entidad que emite la credencial\"\n            placeholder=\"Selecciona la entidad\"\n            rules=\"required\"\n            :options=\"creatorsRef\"\n            :reduce=\"(option) => option\"\n            :getOptionLabel=\"(option) => option.name\"\n          />\n          <v-select\n            name=\"credentials\"\n            label=\"Credenciales por agregar\"\n            placeholder=\"Selecciona las credenciales\"\n            multiple\n            :disabled=\"!values.provider\"\n            rules=\"required\"\n            :options=\"availableCredentials\"\n            :reduce=\"(option) => option\"\n            :getOptionLabel=\"(option) => option.name\"\n            :loading=\"values.provider && values.provider.fetching\"\n          />\n        </div>\n        <div class=\"flex justify-end\">\n          <v-primary-button @click=\"setCredentials\" :disabled=\"!meta.valid\" class=\"min-w-[180px]\"> Agregar </v-primary-button>\n        </div>\n      </div>\n    </div>\n  </modal>\n</template>\n<script setup>\nimport { computed, inject, onMounted, ref, toRef, toRefs, watch } from \"vue\";\nimport creators from \"@/keypair/creators.json\";\nimport { useForm } from \"vee-validate\";\nimport { useWorkspace } from \"@/composables\";\nimport { Connection, clusterApiUrl, PublicKey, Keypair } from \"@solana/web3.js\";\nconst props = defineProps({\n  isVisible: {\n    type: Boolean,\n  },\n  selected: {\n    type: Array,\n    default: [],\n  },\n});\n\nconst creatorsRef = ref(creators);\nconst { selected } = toRefs(props);\n\n//Injected values\nconst nftsMappedByAddress = inject(\"nftsMappedByAddress\", {});\nconst { metaplex } = useWorkspace();\nconst { values, meta, setFieldValue } = useForm();\n\nconst emit = defineEmits([\"update:isVisible\", \"options:addedCredentials\"]);\n\nconst isVisible = computed(() => props.isVisible);\n\nconst isVisibleModal = computed({\n  get: () => isVisible.value,\n  set: (value) => emit(\"update:isVisible\", value),\n});\n\nconst availableCredentials = computed(() => {\n  if (values.provider) {\n    const credentials = nftsMappedByAddress.value[values.provider.address] ?? [];\n    return credentials.filter((credential) => !selected.value.includes(credential.address.toBase58()));\n  }\n  return [];\n});\n\nconst fetchCredentials = async (owner) => {\n  owner.fetching = true;\n  const pb = new PublicKey(owner.address);\n  const _nfts = await metaplex.nfts().findAllByOwner({ owner: pb });\n\n  const nfts = await Promise.all(\n    _nfts.map((nft) => {\n      return metaplex.nfts().load({ metadata: nft });\n    })\n  );\n\n  nftsMappedByAddress.value[owner.address] = nfts.filter((nft) => nft.json && nft.json.model == \"credential\" && nft.uri.includes(\"nft-metadata-augus\") && nft.collection == null);\n  owner.fetching = false;\n};\n\nwatch(\n  () => values.provider,\n  (newValue) => {\n    //Each time provider gets changed we clean\n    setFieldValue(\"credentials\", null);\n    //Check if we need to fetch\n    if (newValue && !nftsMappedByAddress.value[newValue.address].length) {\n      fetchCredentials(newValue);\n    }\n  }\n);\n\nconst setCredentials = () => {\n  emit(\"options:addedCredentials\", values);\n  isVisibleModal.value = false;\n};\n</script>","import script from \"./AddCredentialModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddCredentialModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./OutputOption.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./OutputOption.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <add-credential-modal :selected=\"allSelectedCredentials\" v-model:is-visible=\"addCredentialModalIsVisible\" @options:addedCredentials=\"onAddCredential\" />\n  <div class=\"pt-24 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400\">\n    <div class=\"container px-3 mx-auto flex flex-wrap flex-col md:flex-row items-center justify-between\">\n      <!--Left Col-->\n      <div class=\"flex flex-col w-full md:w-2/5 justify-center items-start text-center md:text-left\">\n        <p class=\"uppercase tracking-loose w-full\">Crea tu botón</p>\n        <h1 class=\"my-4 text-5xl font-bold leading-tight\">Sigue las instrucciones para poder crear tu botón</h1>\n      </div>\n      <lottie-player src=\"https://assets3.lottiefiles.com/packages/lf20_1aqc3umv.json\" background=\"transparent\" speed=\"1\" class=\"w-3/5 md:w-2/6 lg:w-1/6 aspect-square\" loop autoplay />\n    </div>\n  </div>\n  <div class=\"relative bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400\">\n    <svg viewBox=\"0 0 1428 174\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n      <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g transform=\"translate(-2.000000, 44.000000)\" fill=\"#FFFFFF\" fill-rule=\"nonzero\">\n          <path\n            d=\"M0,0 C90.7283404,0.927527913 147.912752,27.187927 291.910178,59.9119003 C387.908462,81.7278826 543.605069,89.334785 759,82.7326078 C469.336065,156.254352 216.336065,153.6679 0,74.9732496\"\n            opacity=\"0.100000001\"\n          ></path>\n          <path\n            d=\"M100,104.708498 C277.413333,72.2345949 426.147877,52.5246657 546.203633,45.5787101 C666.259389,38.6327546 810.524845,41.7979068 979,55.0741668 C931.069965,56.122511 810.303266,74.8455141 616.699903,111.243176 C423.096539,147.640838 250.863238,145.462612 100,104.708498 Z\"\n            opacity=\"0.100000001\"\n          ></path>\n          <path\n            d=\"M1046,51.6521276 C1130.83045,29.328812 1279.08318,17.607883 1439,40.1656806 L1439,120 C1271.17211,77.9435312 1140.17211,55.1609071 1046,51.6521276 Z\"\n            id=\"Path-4\"\n            opacity=\"0.200000003\"\n          ></path>\n        </g>\n        <g transform=\"translate(-4.000000, 76.000000)\" fill=\"#FFFFFF\" fill-rule=\"nonzero\">\n          <path\n            d=\"M0.457,34.035 C57.086,53.198 98.208,65.809 123.822,71.865 C181.454,85.495 234.295,90.29 272.033,93.459 C311.355,96.759 396.635,95.801 461.025,91.663 C486.76,90.01 518.727,86.372 556.926,80.752 C595.747,74.596 622.372,70.008 636.799,66.991 C663.913,61.324 712.501,49.503 727.605,46.128 C780.47,34.317 818.839,22.532 856.324,15.904 C922.689,4.169 955.676,2.522 1011.185,0.432 C1060.705,1.477 1097.39,3.129 1121.236,5.387 C1161.703,9.219 1208.621,17.821 1235.4,22.304 C1285.855,30.748 1354.351,47.432 1440.886,72.354 L1441.191,104.352 L1.121,104.031 L0.457,34.035 Z\"\n          ></path>\n        </g>\n      </g>\n    </svg>\n  </div>\n  <div class=\"flex flex-wrap w-full container mx-auto px-3 pb-8 mt-8\">\n    <!-- Steps -->\n    <div class=\"w-full md:w-1/3 lg:w-1/4\">\n      <step class=\"mb-4 last:mb-0\" v-for=\"(_step, index) in steps\" :key=\"_step\" :selected=\"step == index\" :text=\"_step\" :step=\"index + 1\" />\n    </div>\n    <div class=\"w-full md:w-2/3 lg:w-3/4 md:pl-8\">\n      <!-- Info add -->\n      <template v-if=\"step == 0\">\n        <div class=\"flex justify-between\">\n          <h1 class=\"text-4xl text-pink-400\">Credenciales</h1>\n          <v-primary-button class=\"rounded-full flex items-center\" style=\"min-width: 40px; height: 40px\" @click=\"addCredentialModalIsVisible = true\">\n            <div class=\"flex items-center px-2\">\n              <div class=\"mr-3 hidden sm:block\">Agregar credencial</div>\n              <font-awesome-icon icon=\"fa-solid fa-plus\" />\n            </div>\n          </v-primary-button>\n        </div>\n        <hr class=\"mt-3 dark:border-pink-300 border-t-2 rounded mb-8\" />\n        <!-- Is empty first step -->\n        <div class=\"flex flex-col items-center\" v-if=\"!allSelectedCredentials.length\">\n          <lottie-player\n            class=\"self-center mt-4\"\n            src=\"https://assets4.lottiefiles.com/private_files/lf30_e3pteeho.json\"\n            background=\"transparent\"\n            speed=\"1\"\n            style=\"width: 300px; height: 300px\"\n            loop\n            autoplay\n          ></lottie-player>\n          <div class=\"text-xl font-semibold text-center mt-2\">Aún no has agregado ni una credencial es necesario agregar al menos una credencial para poder proceder.</div>\n        </div>\n        <div v-for=\"provider in providersWithCredentials\" :key=\"provider\">\n          <h3 class=\"text-xl mb-4\">Credenciales de {{ providersMapped[provider].name }}</h3>\n          <div class=\"flex overflow-x-auto gap-x-8\">\n            <nft-card v-for=\"nft in credentials[provider]\" :key=\"nft.address.toBase58()\" :nft=\"nft\" />\n          </div>\n        </div>\n      </template>\n      <template v-else-if=\"step == 1\">\n        <h1 class=\"w-full text-4xl text-pink-400\">Formato de salida</h1>\n        <hr class=\"mt-3 dark:border-pink-300 border-t-2 rounded mb-8\" />\n        <p>Selecciona el formato de salida que deseas para tu código</p>\n        <!-- Is empty first step -->\n        <div class=\"flex flex-wrap gap-12 mt-8\">\n          <output-option @click=\"selectedOption = 'vue'\" :selected=\"selectedOption == 'vue'\" name=\"VueJS\" :image=\"vueImage\" />\n          <output-option @click=\"selectedOption = 'react'\" :selected=\"selectedOption == 'react'\" name=\"React\" :image=\"reactImage\" />\n        </div>\n      </template>\n      <template v-else-if=\"step == 2\">\n        <h1 class=\"w-full text-4xl text-pink-400\">Preview</h1>\n        <hr class=\"mt-3 dark:border-pink-300 border-t-2 rounded mb-8\" />\n        <p>A continuación se te mostrara el resultado de tu configuración para verificar las credenciales seleccionadas.</p>\n        <p>Antes de comenzar asegurate de tener instalado el componente de {{ selectedOption }}</p>\n        <div class=\"my-14\">\n          <h2 class=\"w-full my-2 text-3xl font-bold leading-tight text-left mb-8 text-pink-400\"># Usando NPM</h2>\n          <highlightjs language=\"js\" :code=\"instalationCodeNpmComponent\" />\n        </div>\n        <div class=\"my-14\">\n          <h2 class=\"w-full my-2 text-3xl font-bold leading-tight text-left mb-8 text-pink-400\"># Usando Yarn</h2>\n          <highlightjs language=\"javascript\" :code=\"instalationCodeYarnComponent\" />\n        </div>\n        <div class=\"my-14\">\n          <h2 class=\"w-full my-2 text-3xl font-bold leading-tight text-left mb-8 text-pink-400\"># Código para {{ selectedOption }}</h2>\n          <highlightjs language=\"javascript\" :code=\"buttonCode\" />\n        </div>\n      </template>\n      <div class=\"flex mt-16\" :class=\"{ 'justify-between': step > 0, 'justify-end': step == 0 }\">\n        <v-cancel-button v-if=\"step > 0\" @click=\"step = step - 1\" class=\"rounded-full flex min-w-[180px]\">\n          <div class=\"flex w-full justify-center items-center px-2\">\n            <font-awesome-icon icon=\"fa-solid fa-chevron-left\" />\n            <div class=\"ml-3\">Atras</div>\n          </div>\n        </v-cancel-button>\n        <v-primary-button v-if=\"step != 2\" :disabled=\"!isNextEnabled\" @click=\"handleStateClick\" class=\"rounded-full flex items-center min-w-[180px]\">\n          <div class=\"flex w-full justify-center items-center px-2\">\n            <div class=\"mr-3\">Siguiente</div>\n            <font-awesome-icon icon=\"fa-solid fa-chevron-right\" />\n          </div>\n        </v-primary-button>\n      </div>\n    </div>\n  </div>\n</template>\n<script setup>\nimport { computed, provide, ref } from \"vue\";\nimport Step from \"./Step.vue\";\nimport { AddCredentialModal, OutputOption } from \"@/components/button-create\";\nimport creators from \"@/keypair/creators.json\";\nimport NftCard from \"@/components/nfts/NftCard.vue\";\nimport vueImage from \"@/assets/vue.png\";\nimport reactImage from \"@/assets/react.png\";\nconst step = ref(0);\nconst selectedOption = ref(null);\nconst providersMapped = creators.reduce((acc, creator) => {\n  acc[creator.address] = creator;\n  return acc;\n}, {});\nconst credentials = ref(\n  creators.reduce((acc, creator) => {\n    acc[creator.address] = [];\n    return acc;\n  }, {})\n);\nconst steps = [\"Selecciona tus credenciales\", \"Escoje tu formato\", \"Preview\"];\nconst addCredentialModalIsVisible = ref(false);\nconst nftsMappedByAddress = ref(\n  creators.reduce((acc, creator) => {\n    acc[creator.address] = [];\n    return acc;\n  }, {})\n);\n\nconst allSelectedCredentials = computed(() =>\n  Object.keys(credentials.value).reduce((acc, key) => {\n    acc.push(...credentials.value[key].map((cred) => cred.address.toBase58()));\n    return acc;\n  }, [])\n);\n\nconst isNextEnabled = computed(() => {\n  if (step.value == 0) {\n    return allSelectedCredentials.value.length > 0;\n  } else if (step.value == 1) {\n    return selectedOption.value != null;\n  }\n  return false;\n});\n\nconst providersWithCredentials = computed(() =>\n  Object.keys(credentials.value).filter((key) => {\n    return credentials.value[key].length > 0;\n  })\n);\n\nconst instalationCodeYarnComponent = computed(() => {\n  if (selectedOption.value == \"vue\") return \"yarn add i-am-verifiable-button\";\n  return `yarn add i-am-verifiable-button-${selectedOption.value}`;\n});\nconst instalationCodeNpmComponent = computed(() => {\n  if (selectedOption.value == \"vue\") return \"npm install -i  i-am-verifiable-button\";\n  return `npm install -i i-am-verifiable-button-${selectedOption.value}`;\n});\n\nconst requisitesListCode = computed(() => allSelectedCredentials.value.map((requisite) => `\"${requisite}\"`).join(\", \"));\n\nconst buttonCode = computed(() => {\n  if (selectedOption.value == \"vue\") {\n    return `\n    <template>\n        <h1>Verificar que se tengan credenciales </h1>\n        <i-am-veritiable-button \n          v-bind:loading=\"isLoading\"\n          :requisites=\"requisites\"\n          @failed=\"onVerificationSucceded\"\n          @succeded=\"onVerificationFailed\"\n        >\n          Verify\n        </i-am-veritiable-button>\n    </template>\n    \n    //Setup code\n      import IAmVerifiableButton from 'i-am-verifiable-button-react';\n      import { ref } from 'vue'\n      const requisites = [${requisitesListCode.value}]\n      const isLoading = ref(false)\n        const onVerificationSucceded = () => {\n        alert('Verification succeded')\n      }\n\n      //It can recieve a error parameter e\n      const onVerificationFailed = () => {\n        alert('Verification failed')\n      }\n\n    `;\n  }\n  return `\n  import IAmVerifiableButton from 'i-am-verifiable-button';\n\n  const requisites = [${requisitesListCode.value}]\n  const onVerificationSucceded = () => {\n    alert('Verification succeded')\n  }\n\n  //It can recieve a error parameter e\n  const onVerificationFailed = () => {\n    alert('Verification failed')\n  }\n\n  const Demo = () => {\n    const [loading, setLoading] = useState(false);\n\n    return (\n      <div>\n        <h1>Verificar que se tengan credenciales </h1>\n        <IAmVerifiableButton \n        loading={loading}\n          setLoading={setLoading}\n          requisites={requisites}\n          onVerificationSucceded={onVerificationSucceded}\n          onVerificationFailed={onVerificationFailed}\n        >\n          Verify\n        </IAmVerifiableButton>\n      </Form>\n    );\n  };\n\n  export default Demo;\n  `;\n});\n\n//Providers\nprovide(\"nftsMappedByAddress\", nftsMappedByAddress);\n\nconst onAddCredential = ({ provider, credentials: addedCredentials }) => {\n  credentials.value[provider.address].push(...addedCredentials);\n};\n\nconst handleStateClick = () => {\n  step.value += 1;\n};\n</script>","import script from \"./CreateButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CreateButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["__exports__","creatorsRef","selected","props","nftsMappedByAddress","metaplex","values","meta","setFieldValue","isVisible","isVisibleModal","get","value","set","emit","availableCredentials","provider","credentials","address","filter","credential","includes","toBase58","fetchCredentials","async","owner","fetching","pb","_nfts","nfts","findAllByOwner","Promise","all","map","nft","load","metadata","json","model","uri","collection","newValue","length","setCredentials","step","selectedOption","providersMapped","acc","creator","steps","addCredentialModalIsVisible","allSelectedCredentials","Object","keys","reduce","key","push","cred","isNextEnabled","providersWithCredentials","instalationCodeYarnComponent","instalationCodeNpmComponent","requisitesListCode","requisite","join","buttonCode","onAddCredential","addedCredentials","handleStateClick"],"sourceRoot":""}